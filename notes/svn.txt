revert
------
(use --dry-run if unsure)
svn merge -r501:500
svn ci -m "revert r501"

conflicts
---------
svn resolved baz1
svn resolved baz2
svn ci -m "oops. bad merge. will revert."

merge
-----
cd branch_that_I_will_merge_trunk_into/
svn merge url://trunk
svn ci -m "merge trunk into my branch"

Merging Using the SVN Command line
----------------------------------
1. Find the revision number of the last merge:
   svn log --verbose --stop-on-copy http://svn.openmrs.org/openmrs/trunk
2. Done from the trunk directory
3. Merge trunk & branch xxx from that merge to the latest revision:
   svn merge -r 341:HEAD http://svn.openmrs.org/openmrs/branches/xxx
4. ...examine the diffs, compile, test, etc...
5. Use a descriptive commit description for future ease:
   svn commit -m "Merged branch xxx changes rev:671 - rev:722 into the trunk."

Using git-svn
-------------
git svn init <svn url>
git svn fetch
git svn rebase
git commit <changes>
git svn dcommit // push git changes back to subversion

# -s for standard trunk/branches/tags dir structure
git-svn clone -s http://example.com/my_subversion_repo local_dir
git checkout -b new_branch_name [old_branch_name]
git add --patch
git checkout <filename> # eq to svn revert
git reset HEAD <filename>
git checkout master
git merge <feature_branch>
git merge --squash <feature_branch> # squash all commits into one svn commit
git-svn rebase
git-svn dcommit




